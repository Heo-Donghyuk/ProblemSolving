"""
유형:
아이디어:
- 값을 최소화 하기 위해서는
    - 빼기 연산 뒤의 값을 최대로 만들어야 한다.
    - 빼기 연산을 앞에서 부터 선택해도 될까?
        -> 1+2-3+2+2-2+5-1+2와 같은 식이 있을때
            처음으로 나오는 -를 기준으로 뒤의 수식을 최대화 한 값이
            최종 결과를 가장 작게 만들 수 있는 값일까? => 아니다
    - 빼기 연산을 기준으로 나누고 빼기 연산자들 사이의 값을 괄호로 묶는 것이
        최종 결과를 가장 작게 만들 수 있는 값일까?
        -> 그런 것 같다.
            -와 -사이의 값을 괄호로 묶는 것이 뺄 수 있는 최대한의 값을 모으는 것이기 때문이다.
            -와 -사이에 -연산자가 하나라도 들어가는 순간 그 값을 뺼 수 있는 값의 최댓값이 아니다.
주의:
- 시간복잡도
- 예외
"""
def calc(exp):
    return sum(map(int, exp.split('+')))
expressions = input().split('-')
answer = calc(expressions[0])
for exp in expressions[1:]:
    answer -= calc(exp)
print(answer)