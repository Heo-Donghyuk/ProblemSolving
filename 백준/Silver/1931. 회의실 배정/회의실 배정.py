"""
유형: 그리디
아이디어: 11분
- 현재 시각에서 시작되는 회의들 중 가장 빨리 끝나는 회의를 선택해야 한다.
    - 시작하는 시각이 같다면 빨리 끝나는 회의를 선택하는 것이 유리하다
    - 그런데 시작하는 시간이 다르다면?
        - 0초에 시작하는 회의가 없어서 다음 회의를 선택하려고 한다.    
            - 이 중 가장 빨리 시작하는 회의를 선택해야 하나?
                - 아니다. 빨리 시작하는데 제일 늦게 끝나는 회의일 수 있다.
            - 그럼 가장 빨리 끝나는 회의를 선택해야 하나?
                - 그런 것 같다.
                - 현재 시각을 기준으로 가장 빨리 끝나는 회의를 선택한다고 하자
                    - 끝나는 시간이 같은 회의가 여러개 있다고 하자
                    - 그럼 어떤 회의를 선택하던 회의가 끝나기 전 까지 회의를 시작할 수 없으므로 그리디하게 선택해도된다.
                        - 단, 회의 시간이 0초인 경우에는 그 회의를 선택해야 한다.
                        => 그럼 정렬은 회의가 끝나는 시간을 기준으로하자
                            - 회의가 끝나는 시간을 기준으로 정렬하면
                            - 2순위로 자동적으로 회의 시작 시간으로 정렬될 것이다.
                            그러면 회의 시간이 짧은 순서대로 정렬될 것이다.
주의:
- 시간복잡도: O(N)
- 예외
"""
import sys
input = sys.stdin.readline
n = int(input())
meetings = sorted([tuple(map(int, input().split())) for _ in range(n)], key=lambda x: x[::-1])
answer, curTime = 0, 0
for start, end in meetings:
    if start>=curTime:
        answer+=1
        curTime=end
print(answer)
    