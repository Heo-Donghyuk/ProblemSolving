"""
유형: DP
아이디어:
- 새로운 물건을 넣었을 때 만들 수 있는 가치의 최댓값
    - 사용한 무게 별 최대 가치가 저장된 DP 테이블이 있다 (이전 상태)
    - 여기서 새로운 물건을 넣으려고 할 때
        - 0 ~ k-현재무게 범위의 각 최댓값들에 현재 가치를 더하여
            현재무게 ~ k 범위의 다음 상태의 DP 테이블을 만들자
            => 겹치지 않기 위해 거꾸로 순회하자
                현재무게 -> k의 순으로 새로운 값을 할당하면
                    0~k-현재무게의 범위와 겹칠 수 있어 따로 처리가 필요하다
                k -> 현재무게 순으로 순회하면
                    k-현재무게 ~ 0까지 겹치는 범위가 없어 따로 처리가 필요하지 않다.
        - 이를 위해 max로 이전 상태와 현재 상태의 최댓값의 비교가 필요하다
주의:
- 시간복잡도: O(k*n)
- 예외
"""
import sys
input = sys.stdin.readline
n, k = map(int, input().split())
DP = [0]*(k+1)
for _ in range(n):
    w, v = map(int, input().split())
    for i in range(k, w-1, -1):
        DP[i]=max(DP[i], DP[i-w]+v)
print(max(DP))